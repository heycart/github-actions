name: Jest
on:
  workflow_call:
    inputs:
      extensionName:
        description: "Your extension name"
        required: true
        type: string
      heycartVersion:
        required: false
        type: string
        default: ".auto"
      heycartVersionFallback:
        required: false
        type: string
        default: trunk
      heycart-repository:
        description: The heycart repository to checkout
        type: string
        default: heycart/heycart
      composerRootVersion:
        required: false
        type: string
        default: ".auto"
      uploadCoverage:
        description: "Upload coverage to codecov"
        required: false
        type: boolean
        default: false
    secrets:
      codecovToken:
        description: "Codecov token"
        required: false

jobs:
  run:
    name: Jest
    runs-on: ubuntu-latest
    steps:
      - name: Setup Extension
        uses: heycart/github-actions/setup-extension@main
        with:
          heycartVersion: ${{ inputs.heycartVersion }}
          heycartVersionFallback: ${{ inputs.heycartVersionFallback }}
          heycart-repository: ${{ inputs.heycart-repository }}
          extensionName: ${{ github.event.repository.name }}
          composerRootVersion: ${{ inputs.composerRootVersion }}
          install: true
          install-admin: true
          env: prod
          extraRepositories: |
            {
              "${{ github.event.repository.name }}": {
                "type": "path",
                "url": "custom/plugins/${{ github.event.repository.name }}",
                "symlink": true
              }
            }

      - name: Jest Unit Tests
        working-directory: custom/plugins/${{ inputs.extensionName }}/src/Resources/app/administration
        run: npm run unit -- --coverage

      - name: Upload Coverage
        if: inputs.uploadCoverage == true
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.codecovToken }}
        with:
          root_dir: ${{ github.workspace }}/custom/plugins/${{ inputs.extensionName }}
          working-directory: ${{ github.workspace }}/custom/plugins/${{ inputs.extensionName }}
          directory: ${{ github.workspace }}/custom/plugins/${{ inputs.extensionName }}/src/Resources/app/administration
